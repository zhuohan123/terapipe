# This file is generated by `ray project create`.

# A unique identifier for the head node and workers of this cluster.
cluster_name: model_parallel_latency_16x

# The maximum number of workers nodes to launch in addition to the head
# node. This takes precedence over min_workers. min_workers defaults to 0.
min_workers: 1
initial_workers: 1
max_workers: 1

# Cloud-provider specific configuration.
provider:
    type: aws
    region: us-east-1
    availability_zone: us-east-1f
    cache_stopped_nodes: False

# How Ray will authenticate with newly launched nodes.
auth:
    ssh_user: ubuntu

head_node:
    InstanceType: p3.16xlarge
    ImageId: ami-0d568ce8957ed49d5
    InstanceMarketOptions:
        MarketType: spot
        # SpotOptions:
        #     MaxPrice: "50.0"
    BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
              VolumeSize: 300
    Placement:
        GroupName: hoplite-group
    SecurityGroupIds:
        - "sg-3463e565"

worker_nodes:
    InstanceType: p3.16xlarge
    ImageId: ami-0d568ce8957ed49d5
    InstanceMarketOptions:
        MarketType: spot
        # SpotOptions:
        #     MaxPrice: "19.0"
    BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
              VolumeSize: 300
    Placement:
        GroupName: hoplite-group
    SecurityGroupIds:
        - "sg-3463e565"


setup_commands:
    # This replaces the standard anaconda Ray installation
    - mkdir -p ~/efs
    - sudo mount -t efs fs-d416cc55:/ ~/efs
    - sudo chmod 777 ~/efs

# Command to start ray on the head node. You don't need to change this.
head_start_ray_commands:
    - ray stop
    - "ulimit -n 65536; ray start --head --port=6379 --object-manager-port=8076 --autoscaling-config=~/ray_bootstrap_config.yaml --resources='{\"machine\": 1}'"

# Command to start ray on worker nodes. You don't need to change this.
worker_start_ray_commands:
    - ray stop
    - "ulimit -n 65536; ray start --address=$RAY_HEAD_IP:6379 --object-manager-port=8076 --resources='{\"machine\": 1}'"
